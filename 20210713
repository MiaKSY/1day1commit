----------------------------------------
스프링
----------------------------------------

크롬열기
url에서
https://spring.io/
https://spring.io/tools3/sts/all

현재 버전은 sts4버전
하지만 문제는.... sts4 는 스프링 부트로만 사용해야한다.
그래서 우리는 sts3으로 좀 공부하다가 sts4를 하던가 할거다.

https://github.com/spring-projects/toolsuite-distribution/wiki/Spring-Tool-Suite-3

아래로 스크롤 내리다가 Spring Tool Suite 3.9.11 찾기
https://download.springsource.com/release/STS/3.9.11.RELEASE/dist/e4.14/spring-tool-suite-3.9.11.RELEASE-e4.14.0-win32-x86_64.zip 다운로드

----------------------------------------
zip 파일 풀 때 여기에 풀기 로 풀기
C:\Users\kosmo_\Downloads\spring-tool-suite-3.9.11.RELEASE-e4.14.0-win32-x86_64\sts-bundle\sts-3.9.11.RELEASE 여기까지 들어가서 
STS.exe 눌러서 진행
STS.ini 를 열었을 때, 
-Dosgi.requiredJavaVersion=1.8
자바 버전이 1.8 이어야한다.


----------------------------------------
STS3 실행

워크스페이스를 새로 파면! 항상 UTF-8부터 해주고 시작

----------------------------------------

new - 자바프로젝트 생성

(물론! 바로 메이븐~ 으로 만들어도 되지만, 우리는 기본 구조를 유지하기 위해서, 
자바 프로젝트를 만들고, 변환해주는 방식으로 사용한다.)

우리가 오늘 배운 mybatis 어쩌구 자동으로 해주는 애가 메이븐

우리 자바 프로젝트 마우스 우클릭 - configure - convert to maven project 클릭
우리 자바 프로젝트 마우스 우클릭 - Spring - add spring project nature 클릭

워크스페이스 우 상단에 나뭇잎 아이콘, J 붙은 아이콘 두개가 생김

메이븐 : 라이브러리를 통합적으로 관리


----------------------------------------
https://mvnrepository.com/

spring context 검색

현재 5.3.x 버전까지 있다.
아마 금융권에서는 2.얼마 버전
큰 프로젝트는 3.얼마 간혹 4.얼마 버전
아직 5.버전은 거의 없다.

우리는 연습이니까
아무거나 찾아서 써보자!
5.3.3 선택!

우리는 maven 쓸거니까, maven 에 있는거 고스란히 복사!

----------------------------------------
다시 STS3로 돌아와서, pom.xml에 넣어주는데, 
xml을 건들때는 항상 주의!

</build> 아래    
<dependencies>  </dependencies> 생성
</project>위에


그 사이에 복사해온 거 붙여넣기

하고 ctrl + s

그러면 왼쪽에 maven dependencies가 알아서 막 생성되어있다.

----------------------------------------
탐색기에서 C:\Users\kosmo_\.m2\repository 에 가보면
메이븐이 알아서 이것저것 설치해놨는데
나중에 메이븐을 쓰다가 꼬이면 여기에 와서 
.m2 폴더 다 지워주고 다시 깔아서 시작하면 된다.

----------------------------------------
다시 STS3로 돌아와서
우리 프로젝트 - src - new - spring bean configuration file 이 있나 확인!


----------------------------------------
----------------------------------------
----------------------------------------
----------------------------------------
----------------------------------------
----------------------------------------
----------------------------------------




스프링의 가장 기본적인 개념 두가지
- IoC(역행제어) > DI (dependency injection)
- AOP (Aspect oriented program)

스프링은 대표적인 프레임워크 중 하나이다.

프레임워크 : 시스템 기본 하부 구조를 제공해주어 초기 개발단계에서 노력을 절감시켜준다. 

디자인패턴 : 가이드라인만 제공해준다. ex) 싱글톤 패턴
프레임워크 : 디자인패턴 + 클래스 라이브러리 제공 ex) mybatis

클래스 라이브러리 : 개발자가 코드를 담담 ex) JDBC
프레임워크 : 프레임워크에서 코드를 담당

(나중에 스프링 프레임워크 없이 개발해보시겠습니까? 했을 때 헉!!,... 한다면 이미 스프링 프레임워크를 잘 쓰고 있는 것이다.)


단점 : 처음 한번 이해하기가 어렵다. 진입장벽이 있다.

장점 : 오픈소스! 오픈소스여야 천재들이 많이 달라붙어서 발전이 된다.

(예전에 사용하던 EJB : 한번 컴파일 할 때 마다 15분정도 걸린다.... 그것에 비해서 스프링은 많이 가볍다!!)



pom.xml : 라이브러리를 관리해준다.
