[ 20210722 ]

스프링 MVC 패턴을 배우고 적용하는 과정에서 한번 정리하는 시간을 가져볼까 합니다.

==============================================================================

JAVA : 기능

Html : (웹페이지)화면구조
CSS : 화면꾸미기

JSP : JAVA + Html + CSS

-> 단순 웹페이지 화면 작업이 가능해졌습니다.

==============================================================================

-> ( 데이터베이스 연동 )

JSP + DB -> VO, DAO

-> 웹페이지에서 데이터베이스에 사용자 입력값을 저장시킬수도 있고, 가져올 수도 있다.

-> ( 문제점 ) 웹페이지에서 DB에 바로 연결되어 보안상의 문제가 있다.

JSP + 서비스 + DB

-> 웹페이지와 DB를 연결시키는 중간다리를 만들어주었다. 웹페이지에서 DB에 바로 접근할 수 없다.

-> ( 문제점 ) 하지만 URL에 우리가 작성하는 파일이름들이 너무 정직하게 나온다. 파일 이름만 봐도 우리가 어디서 무슨 작업을 하는 지 알 수 있다.

==============================================================================

MVC 패턴 ( 컨트롤 )

프론트단에서 web.xml에 서블릿 사용설정을 해주고, 백단에서 서블릿으로 사용할 자바 파일을 하나 만들어준다.

어떠한 url 패턴으로 만들어줄 것인지 설정해준다. 

페이지 url을 각각 지정해준다. ( 현재 나는 hashMap을 사용중이다. )

==============================================================================

JDBC : JAVA 파일인 DAO에서 DB와의 연결을 열어주고, 닫아주고, sql 문을 작성한다.

mabatis : Mappers라는 xml에서 sql문을 작성한다.

==============================================================================

Spring : 대표적인 프레임워크 중 하나이다. 

가이드라인이 되는 디자인패턴과, 클래스 라이브러리를 제공해준다.

다양한 어노테이션 @ 활용으로 이전보다 수월하게 작업할 수 있다.


