[ 20210708 - MVC 패턴]

MVC : Model (DB관련) + View (화면) + C (Servlet)
MV : Model 1 방식

Model 1 방식 - url이 아주 정직하다.
    xxx.jsp 파일 요청
    우리가 가지고 있는 웹컨테이너 : 톰캣
    웹컨테이너가 그 파일을 찾아서 
    xxx.jsp 파일을 응답해주는 것
      -> 요청하는 페이지랑 응답받는 페이지가 같다.

Model 2 방식 - MVC 방식 (보안에 좋다.)
    요청을 하면 Servlet파일(xxxservlet.java 파일)
    포워딩(사용자 모르게 파일을 변환)시킨다.
    응답되는 페이지는 xxx.jsp 파일이다.
      -> 요청하는 페이지랑 응답받는 페이지가 다르다.
      (화면과 모델을 분리)

=================================================================

MVC 패턴으로 만들어봅시다!
    준비물 : 
      1. 사용자에게 보여주고 싶은 jsp파일
      2. ▲ 위 jsp 파일에 들어갈 수 있도록 링크를 써 준 jsp파일
      3. 서블릿 용도로 사용할 java파일
      4. web.xml(에서 서블릿연결)			


0. 시작페이지.jsp 파일에서 변수로 우리의 프로젝트 이름을 저장해줍니다.

1. Java Resources - src - New - Servlet 생성
  (생성된 자바 파일의 이름을 기억해주세요)

2. 서블릿 용도로 생성한 자바파일에서
  - 주석, 골뱅이(어노테이션), 시리얼번호, 내용 전부 지워주세요
  - 심플한 생성자 함수
  - get 방식이 불려와도, post 방식이 불려와도 똑같이 processRequest함수를 불러올 겁니다.
  - processRequest함수 안에 경로를 정확히 맞춰주세요!

3.웹 인포 밎에 web.xml
(xml : 프로그램 설정 파일. 점. 하나 찍어도 톰캣 자체가 구동이 안 된다. **주의**)
<servlet-class> 는 서블릿 용도로 만든 자바 클래스가 들어있는 패키지명.자바클래스 입니다.
(헷갈리지 않도록) 서블릿용도로 만든 자바 클래스 이름과 네임을 같게 설정하고, 
(필수로) <servlet>과 <servlet-mapping>의 <servlet-name>을 일치시켜줍니다. 
<servlet-mapping> 안에 <url-pattern>은 여러개여도 상관이 없습니다.
<url-pattern>을 지정해주는 방법은 1. 슬래시/값  2. *.확장자  
    (확장자는 아무거나로 하면 된다. 보통 do를 많이 쓴다.)
    (서로 다른 서블릿일 때, 확장자 이름은 달라야 합니다!)
1. 슬래시/  로 했을 때 : 프로젝트명/값 으로 출력
2. *.확장자 로 했을 때 : 프로젝트명/아아무무거거나나.확장자 로 출력

4. start.jsp로 돌아온다. (사용자에게 보여주고 싶은 jsp파일에 들어갈 수 있도록 링크를 써 준 jsp파일)
변수로 만든 프로젝트 이름/서블릿용도로 만든 자바 클래스 이름 
의 형식으로 MVC 패턴을 완성해줍니다.

